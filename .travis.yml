sudo: required
services:
    - docker

# before_install:
#     - docker build -t atsangarides/docker-react-multicontainer-test -f ./client/Dockerfile.dev ./client

# script:
#     - docker run -e CI=true atsangarides/docker-react-multicontainer-test npm test

# after_success:
#     - docker build -t atsangarides/multi-client ./client
#     - docker build -t atsangarides/multi-nginx ./nginx
#     - docker build -t atsangarides/multi-server ./server
#     - docker build -t atsangarides/multi-worker ./worker
#     # Log in to docker cli
#     - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
#     #  Push images to docker hub
#     - docker push atsangarides/multi-client
#     - docker push atsangarides/multi-nginx
#     - docker push atsangarides/multi-server
#     - docker push atsangarides/multi-worker

jobs:
  include:
    - stage: build test image and run tests
      script: 
        - docker build -t atsangarides/docker-react-multicontainer-test -f ./client/Dockerfile.dev ./client
        - docker run -e CI=true atsangarides/docker-react-multicontainer-test npm test
    - stage: Build prod images and push to docker hub
      script:
        - docker build -t atsangarides/multi-client ./client
        - docker build -t atsangarides/multi-nginx ./nginx
        - docker build -t atsangarides/multi-server ./server
        - docker build -t atsangarides/multi-worker ./worker
        # Log in to docker cli
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
        #  Push images to docker hub
        - docker push atsangarides/multi-client
        - docker push atsangarides/multi-nginx
        - docker push atsangarides/multi-server
        - docker push atsangarides/multi-worker
# deploy:
#     provider: elasticbeanstalk
#     region: "eu-west-2"
#     app: "docker-react"
#     env: "DockerReact-env"
#     bucket_name: "elasticbeanstalk-eu-west-2-983627010696"
#     bucket_path: "docker-react"
#     on:
#         branch: master
#     access_key_id: $AWS_ACCESS_KEY
#     secret_access_key: $AWS_SECRET_KEY